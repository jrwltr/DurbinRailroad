;=============================================================================
long_addend1    var word[2] bank0 system
long_addend2    var word[2] bank0 system
long_minuend    var word[2] bank0 system
long_subtrahend var word[2] bank0 system
long_result     var word[2] bank0 system

;=============================================================================
long_add:
ASM
    clrf    BSR                             ; set bank to 0

    movfw   long_addend1
    addwf   long_addend2   , w
    movwf   long_result

    movfw   long_addend1 + 1
    addwfc  long_addend2 + 1, w
    movwf   long_result  + 1

    movfw   long_addend1 + 2
    addwfc  long_addend2 + 2, w
    movwf   long_result  + 2

    movfw   long_addend1 + 3
    addwfc  long_addend2 + 3, w
    movwf   long_result  + 3

    return
ENDASM

;=============================================================================
long_subtract:
ASM
    clrf    BSR                             ; set bank to 0

    movfw   long_subtrahend
    subwf   long_minuend       , w
    movwf   long_result

    movfw   long_subtrahend + 1
    subwfb  long_minuend    + 1, w
    movwf   long_result     + 1

    movfw   long_subtrahend + 2
    subwfb  long_minuend    + 2, w
    movwf   long_result     + 2

    movfw   long_subtrahend + 3
    subwfb  long_minuend    + 3, w
    movwf   long_result     + 3

    return
ENDASM
 
;=============================================================================
long_dividend   var word[2]
long_divisor    var word[2]
long_quotient   var word[2]

long_divide:
    long_quotient[0] = -1;
    long_quotient[1] = -1;
    long_subtrahend[0] = long_divisor[0]
    long_subtrahend[1] = long_divisor[1]
    long_result[0] = long_dividend[0]
    long_result[1] = long_dividend[1]
    do
        long_quotient[0] = long_quotient[0] + 1
        if long_quotient[0] = 0 then long_quotient[1] = long_quotient[1] + 1
        long_minuend[0] = long_result[0]
        long_minuend[1] = long_result[1]
        gosub long_subtract
    loop until long_result[1] & $8000
    long_result[0] = long_quotient[0]
    long_result[1] = long_quotient[1]
    return

;=============================================================================

